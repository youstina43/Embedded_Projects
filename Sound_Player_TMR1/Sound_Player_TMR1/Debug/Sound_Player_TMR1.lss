
Sound_Player_TMR1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000546  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000032c  00800060  00000546  000005ba  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000008e6  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000918  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000d0  00000000  00000000  00000954  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b3a  00000000  00000000  00000a24  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000743  00000000  00000000  0000155e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000007ea  00000000  00000000  00001ca1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000014c  00000000  00000000  0000248c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000050a  00000000  00000000  000025d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000585  00000000  00000000  00002ae2  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000a0  00000000  00000000  00003067  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	13 e0       	ldi	r17, 0x03	; 3
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 e4       	ldi	r30, 0x46	; 70
  68:	f5 e0       	ldi	r31, 0x05	; 5
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ac 38       	cpi	r26, 0x8C	; 140
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 41 00 	call	0x82	; 0x82 <main>
  7a:	0c 94 a1 02 	jmp	0x542	; 0x542 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:
	4, 8, 4, 4, 8, 4,
	8, 8, 8, 8, 8, 2
};

int main(void)
{   DIO_init();
  82:	0e 94 a7 00 	call	0x14e	; 0x14e <DIO_init>
	TMR1_voidInit();
  86:	0e 94 b6 00 	call	0x16c	; 0x16c <TMR1_voidInit>
	
	u32 I=0,duration=0;
  8a:	c1 2c       	mov	r12, r1
  8c:	d1 2c       	mov	r13, r1
  8e:	76 01       	movw	r14, r12
	
    while (1) 
    {
		//while (melody[I]!='\0')
		//{
			TMR1_SetValueICR1(melody[I]);
  90:	e6 01       	movw	r28, r12
  92:	cc 0f       	add	r28, r28
  94:	dd 1f       	adc	r29, r29
  96:	fe 01       	movw	r30, r28
  98:	ea 50       	subi	r30, 0x0A	; 10
  9a:	fe 4f       	sbci	r31, 0xFE	; 254
  9c:	80 81       	ld	r24, Z
  9e:	91 81       	ldd	r25, Z+1	; 0x01
  a0:	0e 94 c9 00 	call	0x192	; 0x192 <TMR1_SetValueICR1>
			TMR1_voidSetOutputCompareMatchValueA(DutyCycle);
  a4:	82 e3       	ldi	r24, 0x32	; 50
  a6:	90 e0       	ldi	r25, 0x00	; 0
  a8:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <TMR1_voidSetOutputCompareMatchValueA>
			TMR1_voidStart();
  ac:	0e 94 d7 00 	call	0x1ae	; 0x1ae <TMR1_voidStart>
			duration = 1000/durations[I];
  b0:	c0 5a       	subi	r28, 0xA0	; 160
  b2:	df 4f       	sbci	r29, 0xFF	; 255
  b4:	68 81       	ld	r22, Y
  b6:	79 81       	ldd	r23, Y+1	; 0x01
  b8:	88 ee       	ldi	r24, 0xE8	; 232
  ba:	93 e0       	ldi	r25, 0x03	; 3
  bc:	0e 94 48 02 	call	0x490	; 0x490 <__divmodhi4>
  c0:	07 2e       	mov	r0, r23
  c2:	00 0c       	add	r0, r0
  c4:	88 0b       	sbc	r24, r24
  c6:	99 0b       	sbc	r25, r25
			_delay_ms(duration);
  c8:	0e 94 24 01 	call	0x248	; 0x248 <__floatunsisf>
  cc:	2b 01       	movw	r4, r22
  ce:	3c 01       	movw	r6, r24

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
  d0:	20 e0       	ldi	r18, 0x00	; 0
  d2:	30 e0       	ldi	r19, 0x00	; 0
  d4:	4a e7       	ldi	r20, 0x7A	; 122
  d6:	55 e4       	ldi	r21, 0x45	; 69
  d8:	0e 94 b3 01 	call	0x366	; 0x366 <__mulsf3>
  dc:	4b 01       	movw	r8, r22
  de:	5c 01       	movw	r10, r24
	if (__tmp < 1.0)
  e0:	20 e0       	ldi	r18, 0x00	; 0
  e2:	30 e0       	ldi	r19, 0x00	; 0
  e4:	40 e8       	ldi	r20, 0x80	; 128
  e6:	5f e3       	ldi	r21, 0x3F	; 63
  e8:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <__cmpsf2>
  ec:	88 23       	and	r24, r24
  ee:	24 f1       	brlt	.+72     	; 0x138 <main+0xb6>
		__ticks = 1;
	else if (__tmp > 65535)
  f0:	20 e0       	ldi	r18, 0x00	; 0
  f2:	3f ef       	ldi	r19, 0xFF	; 255
  f4:	4f e7       	ldi	r20, 0x7F	; 127
  f6:	57 e4       	ldi	r21, 0x47	; 71
  f8:	c5 01       	movw	r24, r10
  fa:	b4 01       	movw	r22, r8
  fc:	0e 94 ae 01 	call	0x35c	; 0x35c <__gesf2>
 100:	18 16       	cp	r1, r24
 102:	ac f4       	brge	.+42     	; 0x12e <main+0xac>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 104:	20 e0       	ldi	r18, 0x00	; 0
 106:	30 e0       	ldi	r19, 0x00	; 0
 108:	40 e2       	ldi	r20, 0x20	; 32
 10a:	51 e4       	ldi	r21, 0x41	; 65
 10c:	c3 01       	movw	r24, r6
 10e:	b2 01       	movw	r22, r4
 110:	0e 94 b3 01 	call	0x366	; 0x366 <__mulsf3>
 114:	0e 94 f5 00 	call	0x1ea	; 0x1ea <__fixunssfsi>
 118:	06 c0       	rjmp	.+12     	; 0x126 <main+0xa4>
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 11a:	80 e9       	ldi	r24, 0x90	; 144
 11c:	91 e0       	ldi	r25, 0x01	; 1
 11e:	01 97       	sbiw	r24, 0x01	; 1
 120:	f1 f7       	brne	.-4      	; 0x11e <main+0x9c>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 122:	61 50       	subi	r22, 0x01	; 1
 124:	71 09       	sbc	r23, r1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 126:	61 15       	cp	r22, r1
 128:	71 05       	cpc	r23, r1
 12a:	b9 f7       	brne	.-18     	; 0x11a <main+0x98>
 12c:	0a c0       	rjmp	.+20     	; 0x142 <main+0xc0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 12e:	c5 01       	movw	r24, r10
 130:	b4 01       	movw	r22, r8
 132:	0e 94 f5 00 	call	0x1ea	; 0x1ea <__fixunssfsi>
 136:	02 c0       	rjmp	.+4      	; 0x13c <main+0xba>

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
		__ticks = 1;
 138:	61 e0       	ldi	r22, 0x01	; 1
 13a:	70 e0       	ldi	r23, 0x00	; 0
 13c:	cb 01       	movw	r24, r22
 13e:	01 97       	sbiw	r24, 0x01	; 1
 140:	f1 f7       	brne	.-4      	; 0x13e <main+0xbc>
			I++;
 142:	8f ef       	ldi	r24, 0xFF	; 255
 144:	c8 1a       	sub	r12, r24
 146:	d8 0a       	sbc	r13, r24
 148:	e8 0a       	sbc	r14, r24
 14a:	f8 0a       	sbc	r15, r24
		//}
    }
 14c:	a1 cf       	rjmp	.-190    	; 0x90 <main+0xe>

0000014e <DIO_init>:
#include "DIO_Private.h"

void DIO_init(void)
{
	/*Set Initial Directions FOR Pins */
	DDRA = CONC(DIO_PA7_INITIAL_DIRECTION,DIO_PA6_INITIAL_DIRECTION,DIO_PA5_INITIAL_DIRECTION,DIO_PA4_INITIAL_DIRECTION,
 14e:	8d ef       	ldi	r24, 0xFD	; 253
 150:	8a bb       	out	0x1a, r24	; 26
	DIO_PA3_INITIAL_DIRECTION,DIO_PA2_INITIAL_DIRECTION,DIO_PA1_INITIAL_DIRECTION,DIO_PA0_INITIAL_DIRECTION);
	
	DDRB = CONC(DIO_PB7_INITIAL_DIRECTION,DIO_PB6_INITIAL_DIRECTION,DIO_PB5_INITIAL_DIRECTION,DIO_PB4_INITIAL_DIRECTION,
 152:	8f ef       	ldi	r24, 0xFF	; 255
 154:	87 bb       	out	0x17, r24	; 23
	DIO_PB3_INITIAL_DIRECTION,DIO_PB2_INITIAL_DIRECTION,DIO_PB1_INITIAL_DIRECTION,DIO_PB0_INITIAL_DIRECTION);
	
	DDRC = CONC(DIO_PC7_INITIAL_DIRECTION,DIO_PC6_INITIAL_DIRECTION,DIO_PC5_INITIAL_DIRECTION,DIO_PC4_INITIAL_DIRECTION,
 156:	8d e3       	ldi	r24, 0x3D	; 61
 158:	84 bb       	out	0x14, r24	; 20
	DIO_PC3_INITIAL_DIRECTION,DIO_PC2_INITIAL_DIRECTION,DIO_PC1_INITIAL_DIRECTION,DIO_PC0_INITIAL_DIRECTION);
	
	DDRD = CONC(DIO_PD7_INITIAL_DIRECTION,DIO_PD6_INITIAL_DIRECTION,DIO_PD5_INITIAL_DIRECTION,DIO_PD4_INITIAL_DIRECTION,
 15a:	81 e2       	ldi	r24, 0x21	; 33
 15c:	81 bb       	out	0x11, r24	; 17
	DIO_PD3_INITIAL_DIRECTION,DIO_PD2_INITIAL_DIRECTION,DIO_PD1_INITIAL_DIRECTION,DIO_PD0_INITIAL_DIRECTION);
	
	/*Set Initial Values FOR Pins */
	PORTA = CONC(DIO_PA7_INITIAL_VALUE,DIO_PA6_INITIAL_VALUE,DIO_PA5_INITIAL_VALUE,DIO_PA4_INITIAL_VALUE,
 15e:	1b ba       	out	0x1b, r1	; 27
	DIO_PA3_INITIAL_VALUE,DIO_PA2_INITIAL_VALUE,DIO_PA1_INITIAL_VALUE,DIO_PA0_INITIAL_VALUE);
	
	PORTB = CONC(DIO_PB7_INITIAL_VALUE,DIO_PB6_INITIAL_VALUE,DIO_PB5_INITIAL_VALUE,DIO_PB4_INITIAL_VALUE,
 160:	18 ba       	out	0x18, r1	; 24
	DIO_PB3_INITIAL_VALUE,DIO_PB2_INITIAL_VALUE,DIO_PB1_INITIAL_VALUE,DIO_PB0_INITIAL_VALUE);
	
	PORTC = CONC(DIO_PC7_INITIAL_VALUE,DIO_PC6_INITIAL_VALUE,DIO_PC5_INITIAL_VALUE,DIO_PC4_INITIAL_VALUE,
 162:	8c e3       	ldi	r24, 0x3C	; 60
 164:	85 bb       	out	0x15, r24	; 21
	DIO_PC3_INITIAL_VALUE,DIO_PC2_INITIAL_VALUE,DIO_PC1_INITIAL_VALUE,DIO_PC0_INITIAL_VALUE);
	
	PORTD = CONC(DIO_PD7_INITIAL_VALUE,DIO_PD6_INITIAL_VALUE,DIO_PD5_INITIAL_VALUE,DIO_PD4_INITIAL_VALUE,
 166:	8c ef       	ldi	r24, 0xFC	; 252
 168:	82 bb       	out	0x12, r24	; 18
 16a:	08 95       	ret

0000016c <TMR1_voidInit>:

void TMR1_voidStop(void)
{
	CLEAR_BIT (TCCR1B,CS10);
	CLEAR_BIT (TCCR1B,CS11);
	CLEAR_BIT (TCCR1B,CS12);
 16c:	8f b5       	in	r24, 0x2f	; 47
 16e:	8e 7f       	andi	r24, 0xFE	; 254
 170:	8f bd       	out	0x2f, r24	; 47
 172:	8f b5       	in	r24, 0x2f	; 47
 174:	82 60       	ori	r24, 0x02	; 2
 176:	8f bd       	out	0x2f, r24	; 47
 178:	8e b5       	in	r24, 0x2e	; 46
 17a:	88 60       	ori	r24, 0x08	; 8
 17c:	8e bd       	out	0x2e, r24	; 46
 17e:	8e b5       	in	r24, 0x2e	; 46
 180:	80 61       	ori	r24, 0x10	; 16
 182:	8e bd       	out	0x2e, r24	; 46
 184:	8f b5       	in	r24, 0x2f	; 47
 186:	8f 7b       	andi	r24, 0xBF	; 191
 188:	8f bd       	out	0x2f, r24	; 47
 18a:	8f b5       	in	r24, 0x2f	; 47
 18c:	80 68       	ori	r24, 0x80	; 128
 18e:	8f bd       	out	0x2f, r24	; 47
 190:	08 95       	ret

00000192 <TMR1_SetValueICR1>:
 192:	9c 01       	movw	r18, r24
 194:	40 e0       	ldi	r20, 0x00	; 0
 196:	50 e0       	ldi	r21, 0x00	; 0
 198:	60 e9       	ldi	r22, 0x90	; 144
 19a:	70 ed       	ldi	r23, 0xD0	; 208
 19c:	83 e0       	ldi	r24, 0x03	; 3
 19e:	90 e0       	ldi	r25, 0x00	; 0
 1a0:	0e 94 5c 02 	call	0x4b8	; 0x4b8 <__udivmodsi4>
 1a4:	21 50       	subi	r18, 0x01	; 1
 1a6:	31 09       	sbc	r19, r1
 1a8:	37 bd       	out	0x27, r19	; 39
 1aa:	26 bd       	out	0x26, r18	; 38
 1ac:	08 95       	ret

000001ae <TMR1_voidStart>:
 1ae:	8e b5       	in	r24, 0x2e	; 46
 1b0:	81 60       	ori	r24, 0x01	; 1
 1b2:	8e bd       	out	0x2e, r24	; 46
 1b4:	8e b5       	in	r24, 0x2e	; 46
 1b6:	82 60       	ori	r24, 0x02	; 2
 1b8:	8e bd       	out	0x2e, r24	; 46
 1ba:	8e b5       	in	r24, 0x2e	; 46
 1bc:	8b 7f       	andi	r24, 0xFB	; 251
 1be:	8e bd       	out	0x2e, r24	; 46
 1c0:	08 95       	ret

000001c2 <TMR1_voidSetOutputCompareMatchValueA>:
}

void TMR1_voidSetOutputCompareMatchValueA( u16 Cpy_u16DutyCycle)
{
	OCR1A_u16 = (u16)(((u32)Cpy_u16DutyCycle*(u32)(ICR1_u16+1))/100);
 1c2:	a6 b5       	in	r26, 0x26	; 38
 1c4:	b7 b5       	in	r27, 0x27	; 39
 1c6:	11 96       	adiw	r26, 0x01	; 1
 1c8:	9c 01       	movw	r18, r24
 1ca:	0e 94 7e 02 	call	0x4fc	; 0x4fc <__umulhisi3>
 1ce:	24 e6       	ldi	r18, 0x64	; 100
 1d0:	30 e0       	ldi	r19, 0x00	; 0
 1d2:	40 e0       	ldi	r20, 0x00	; 0
 1d4:	50 e0       	ldi	r21, 0x00	; 0
 1d6:	0e 94 5c 02 	call	0x4b8	; 0x4b8 <__udivmodsi4>
 1da:	3b bd       	out	0x2b, r19	; 43
 1dc:	2a bd       	out	0x2a, r18	; 42
 1de:	08 95       	ret

000001e0 <__cmpsf2>:
 1e0:	0e 94 61 01 	call	0x2c2	; 0x2c2 <__fp_cmp>
 1e4:	08 f4       	brcc	.+2      	; 0x1e8 <__cmpsf2+0x8>
 1e6:	81 e0       	ldi	r24, 0x01	; 1
 1e8:	08 95       	ret

000001ea <__fixunssfsi>:
 1ea:	0e 94 8d 01 	call	0x31a	; 0x31a <__fp_splitA>
 1ee:	88 f0       	brcs	.+34     	; 0x212 <__fixunssfsi+0x28>
 1f0:	9f 57       	subi	r25, 0x7F	; 127
 1f2:	98 f0       	brcs	.+38     	; 0x21a <__fixunssfsi+0x30>
 1f4:	b9 2f       	mov	r27, r25
 1f6:	99 27       	eor	r25, r25
 1f8:	b7 51       	subi	r27, 0x17	; 23
 1fa:	b0 f0       	brcs	.+44     	; 0x228 <__fixunssfsi+0x3e>
 1fc:	e1 f0       	breq	.+56     	; 0x236 <__fixunssfsi+0x4c>
 1fe:	66 0f       	add	r22, r22
 200:	77 1f       	adc	r23, r23
 202:	88 1f       	adc	r24, r24
 204:	99 1f       	adc	r25, r25
 206:	1a f0       	brmi	.+6      	; 0x20e <__fixunssfsi+0x24>
 208:	ba 95       	dec	r27
 20a:	c9 f7       	brne	.-14     	; 0x1fe <__fixunssfsi+0x14>
 20c:	14 c0       	rjmp	.+40     	; 0x236 <__fixunssfsi+0x4c>
 20e:	b1 30       	cpi	r27, 0x01	; 1
 210:	91 f0       	breq	.+36     	; 0x236 <__fixunssfsi+0x4c>
 212:	0e 94 a7 01 	call	0x34e	; 0x34e <__fp_zero>
 216:	b1 e0       	ldi	r27, 0x01	; 1
 218:	08 95       	ret
 21a:	0c 94 a7 01 	jmp	0x34e	; 0x34e <__fp_zero>
 21e:	67 2f       	mov	r22, r23
 220:	78 2f       	mov	r23, r24
 222:	88 27       	eor	r24, r24
 224:	b8 5f       	subi	r27, 0xF8	; 248
 226:	39 f0       	breq	.+14     	; 0x236 <__fixunssfsi+0x4c>
 228:	b9 3f       	cpi	r27, 0xF9	; 249
 22a:	cc f3       	brlt	.-14     	; 0x21e <__fixunssfsi+0x34>
 22c:	86 95       	lsr	r24
 22e:	77 95       	ror	r23
 230:	67 95       	ror	r22
 232:	b3 95       	inc	r27
 234:	d9 f7       	brne	.-10     	; 0x22c <__fixunssfsi+0x42>
 236:	3e f4       	brtc	.+14     	; 0x246 <__fixunssfsi+0x5c>
 238:	90 95       	com	r25
 23a:	80 95       	com	r24
 23c:	70 95       	com	r23
 23e:	61 95       	neg	r22
 240:	7f 4f       	sbci	r23, 0xFF	; 255
 242:	8f 4f       	sbci	r24, 0xFF	; 255
 244:	9f 4f       	sbci	r25, 0xFF	; 255
 246:	08 95       	ret

00000248 <__floatunsisf>:
 248:	e8 94       	clt
 24a:	09 c0       	rjmp	.+18     	; 0x25e <__floatsisf+0x12>

0000024c <__floatsisf>:
 24c:	97 fb       	bst	r25, 7
 24e:	3e f4       	brtc	.+14     	; 0x25e <__floatsisf+0x12>
 250:	90 95       	com	r25
 252:	80 95       	com	r24
 254:	70 95       	com	r23
 256:	61 95       	neg	r22
 258:	7f 4f       	sbci	r23, 0xFF	; 255
 25a:	8f 4f       	sbci	r24, 0xFF	; 255
 25c:	9f 4f       	sbci	r25, 0xFF	; 255
 25e:	99 23       	and	r25, r25
 260:	a9 f0       	breq	.+42     	; 0x28c <__floatsisf+0x40>
 262:	f9 2f       	mov	r31, r25
 264:	96 e9       	ldi	r25, 0x96	; 150
 266:	bb 27       	eor	r27, r27
 268:	93 95       	inc	r25
 26a:	f6 95       	lsr	r31
 26c:	87 95       	ror	r24
 26e:	77 95       	ror	r23
 270:	67 95       	ror	r22
 272:	b7 95       	ror	r27
 274:	f1 11       	cpse	r31, r1
 276:	f8 cf       	rjmp	.-16     	; 0x268 <__floatsisf+0x1c>
 278:	fa f4       	brpl	.+62     	; 0x2b8 <__floatsisf+0x6c>
 27a:	bb 0f       	add	r27, r27
 27c:	11 f4       	brne	.+4      	; 0x282 <__floatsisf+0x36>
 27e:	60 ff       	sbrs	r22, 0
 280:	1b c0       	rjmp	.+54     	; 0x2b8 <__floatsisf+0x6c>
 282:	6f 5f       	subi	r22, 0xFF	; 255
 284:	7f 4f       	sbci	r23, 0xFF	; 255
 286:	8f 4f       	sbci	r24, 0xFF	; 255
 288:	9f 4f       	sbci	r25, 0xFF	; 255
 28a:	16 c0       	rjmp	.+44     	; 0x2b8 <__floatsisf+0x6c>
 28c:	88 23       	and	r24, r24
 28e:	11 f0       	breq	.+4      	; 0x294 <__floatsisf+0x48>
 290:	96 e9       	ldi	r25, 0x96	; 150
 292:	11 c0       	rjmp	.+34     	; 0x2b6 <__floatsisf+0x6a>
 294:	77 23       	and	r23, r23
 296:	21 f0       	breq	.+8      	; 0x2a0 <__floatsisf+0x54>
 298:	9e e8       	ldi	r25, 0x8E	; 142
 29a:	87 2f       	mov	r24, r23
 29c:	76 2f       	mov	r23, r22
 29e:	05 c0       	rjmp	.+10     	; 0x2aa <__floatsisf+0x5e>
 2a0:	66 23       	and	r22, r22
 2a2:	71 f0       	breq	.+28     	; 0x2c0 <__floatsisf+0x74>
 2a4:	96 e8       	ldi	r25, 0x86	; 134
 2a6:	86 2f       	mov	r24, r22
 2a8:	70 e0       	ldi	r23, 0x00	; 0
 2aa:	60 e0       	ldi	r22, 0x00	; 0
 2ac:	2a f0       	brmi	.+10     	; 0x2b8 <__floatsisf+0x6c>
 2ae:	9a 95       	dec	r25
 2b0:	66 0f       	add	r22, r22
 2b2:	77 1f       	adc	r23, r23
 2b4:	88 1f       	adc	r24, r24
 2b6:	da f7       	brpl	.-10     	; 0x2ae <__floatsisf+0x62>
 2b8:	88 0f       	add	r24, r24
 2ba:	96 95       	lsr	r25
 2bc:	87 95       	ror	r24
 2be:	97 f9       	bld	r25, 7
 2c0:	08 95       	ret

000002c2 <__fp_cmp>:
 2c2:	99 0f       	add	r25, r25
 2c4:	00 08       	sbc	r0, r0
 2c6:	55 0f       	add	r21, r21
 2c8:	aa 0b       	sbc	r26, r26
 2ca:	e0 e8       	ldi	r30, 0x80	; 128
 2cc:	fe ef       	ldi	r31, 0xFE	; 254
 2ce:	16 16       	cp	r1, r22
 2d0:	17 06       	cpc	r1, r23
 2d2:	e8 07       	cpc	r30, r24
 2d4:	f9 07       	cpc	r31, r25
 2d6:	c0 f0       	brcs	.+48     	; 0x308 <__fp_cmp+0x46>
 2d8:	12 16       	cp	r1, r18
 2da:	13 06       	cpc	r1, r19
 2dc:	e4 07       	cpc	r30, r20
 2de:	f5 07       	cpc	r31, r21
 2e0:	98 f0       	brcs	.+38     	; 0x308 <__fp_cmp+0x46>
 2e2:	62 1b       	sub	r22, r18
 2e4:	73 0b       	sbc	r23, r19
 2e6:	84 0b       	sbc	r24, r20
 2e8:	95 0b       	sbc	r25, r21
 2ea:	39 f4       	brne	.+14     	; 0x2fa <__fp_cmp+0x38>
 2ec:	0a 26       	eor	r0, r26
 2ee:	61 f0       	breq	.+24     	; 0x308 <__fp_cmp+0x46>
 2f0:	23 2b       	or	r18, r19
 2f2:	24 2b       	or	r18, r20
 2f4:	25 2b       	or	r18, r21
 2f6:	21 f4       	brne	.+8      	; 0x300 <__fp_cmp+0x3e>
 2f8:	08 95       	ret
 2fa:	0a 26       	eor	r0, r26
 2fc:	09 f4       	brne	.+2      	; 0x300 <__fp_cmp+0x3e>
 2fe:	a1 40       	sbci	r26, 0x01	; 1
 300:	a6 95       	lsr	r26
 302:	8f ef       	ldi	r24, 0xFF	; 255
 304:	81 1d       	adc	r24, r1
 306:	81 1d       	adc	r24, r1
 308:	08 95       	ret

0000030a <__fp_split3>:
 30a:	57 fd       	sbrc	r21, 7
 30c:	90 58       	subi	r25, 0x80	; 128
 30e:	44 0f       	add	r20, r20
 310:	55 1f       	adc	r21, r21
 312:	59 f0       	breq	.+22     	; 0x32a <__fp_splitA+0x10>
 314:	5f 3f       	cpi	r21, 0xFF	; 255
 316:	71 f0       	breq	.+28     	; 0x334 <__fp_splitA+0x1a>
 318:	47 95       	ror	r20

0000031a <__fp_splitA>:
 31a:	88 0f       	add	r24, r24
 31c:	97 fb       	bst	r25, 7
 31e:	99 1f       	adc	r25, r25
 320:	61 f0       	breq	.+24     	; 0x33a <__fp_splitA+0x20>
 322:	9f 3f       	cpi	r25, 0xFF	; 255
 324:	79 f0       	breq	.+30     	; 0x344 <__fp_splitA+0x2a>
 326:	87 95       	ror	r24
 328:	08 95       	ret
 32a:	12 16       	cp	r1, r18
 32c:	13 06       	cpc	r1, r19
 32e:	14 06       	cpc	r1, r20
 330:	55 1f       	adc	r21, r21
 332:	f2 cf       	rjmp	.-28     	; 0x318 <__fp_split3+0xe>
 334:	46 95       	lsr	r20
 336:	f1 df       	rcall	.-30     	; 0x31a <__fp_splitA>
 338:	08 c0       	rjmp	.+16     	; 0x34a <__fp_splitA+0x30>
 33a:	16 16       	cp	r1, r22
 33c:	17 06       	cpc	r1, r23
 33e:	18 06       	cpc	r1, r24
 340:	99 1f       	adc	r25, r25
 342:	f1 cf       	rjmp	.-30     	; 0x326 <__fp_splitA+0xc>
 344:	86 95       	lsr	r24
 346:	71 05       	cpc	r23, r1
 348:	61 05       	cpc	r22, r1
 34a:	08 94       	sec
 34c:	08 95       	ret

0000034e <__fp_zero>:
 34e:	e8 94       	clt

00000350 <__fp_szero>:
 350:	bb 27       	eor	r27, r27
 352:	66 27       	eor	r22, r22
 354:	77 27       	eor	r23, r23
 356:	cb 01       	movw	r24, r22
 358:	97 f9       	bld	r25, 7
 35a:	08 95       	ret

0000035c <__gesf2>:
 35c:	0e 94 61 01 	call	0x2c2	; 0x2c2 <__fp_cmp>
 360:	08 f4       	brcc	.+2      	; 0x364 <__gesf2+0x8>
 362:	8f ef       	ldi	r24, 0xFF	; 255
 364:	08 95       	ret

00000366 <__mulsf3>:
 366:	0e 94 c6 01 	call	0x38c	; 0x38c <__mulsf3x>
 36a:	0c 94 37 02 	jmp	0x46e	; 0x46e <__fp_round>
 36e:	0e 94 29 02 	call	0x452	; 0x452 <__fp_pscA>
 372:	38 f0       	brcs	.+14     	; 0x382 <__mulsf3+0x1c>
 374:	0e 94 30 02 	call	0x460	; 0x460 <__fp_pscB>
 378:	20 f0       	brcs	.+8      	; 0x382 <__mulsf3+0x1c>
 37a:	95 23       	and	r25, r21
 37c:	11 f0       	breq	.+4      	; 0x382 <__mulsf3+0x1c>
 37e:	0c 94 20 02 	jmp	0x440	; 0x440 <__fp_inf>
 382:	0c 94 26 02 	jmp	0x44c	; 0x44c <__fp_nan>
 386:	11 24       	eor	r1, r1
 388:	0c 94 a8 01 	jmp	0x350	; 0x350 <__fp_szero>

0000038c <__mulsf3x>:
 38c:	0e 94 85 01 	call	0x30a	; 0x30a <__fp_split3>
 390:	70 f3       	brcs	.-36     	; 0x36e <__mulsf3+0x8>

00000392 <__mulsf3_pse>:
 392:	95 9f       	mul	r25, r21
 394:	c1 f3       	breq	.-16     	; 0x386 <__mulsf3+0x20>
 396:	95 0f       	add	r25, r21
 398:	50 e0       	ldi	r21, 0x00	; 0
 39a:	55 1f       	adc	r21, r21
 39c:	62 9f       	mul	r22, r18
 39e:	f0 01       	movw	r30, r0
 3a0:	72 9f       	mul	r23, r18
 3a2:	bb 27       	eor	r27, r27
 3a4:	f0 0d       	add	r31, r0
 3a6:	b1 1d       	adc	r27, r1
 3a8:	63 9f       	mul	r22, r19
 3aa:	aa 27       	eor	r26, r26
 3ac:	f0 0d       	add	r31, r0
 3ae:	b1 1d       	adc	r27, r1
 3b0:	aa 1f       	adc	r26, r26
 3b2:	64 9f       	mul	r22, r20
 3b4:	66 27       	eor	r22, r22
 3b6:	b0 0d       	add	r27, r0
 3b8:	a1 1d       	adc	r26, r1
 3ba:	66 1f       	adc	r22, r22
 3bc:	82 9f       	mul	r24, r18
 3be:	22 27       	eor	r18, r18
 3c0:	b0 0d       	add	r27, r0
 3c2:	a1 1d       	adc	r26, r1
 3c4:	62 1f       	adc	r22, r18
 3c6:	73 9f       	mul	r23, r19
 3c8:	b0 0d       	add	r27, r0
 3ca:	a1 1d       	adc	r26, r1
 3cc:	62 1f       	adc	r22, r18
 3ce:	83 9f       	mul	r24, r19
 3d0:	a0 0d       	add	r26, r0
 3d2:	61 1d       	adc	r22, r1
 3d4:	22 1f       	adc	r18, r18
 3d6:	74 9f       	mul	r23, r20
 3d8:	33 27       	eor	r19, r19
 3da:	a0 0d       	add	r26, r0
 3dc:	61 1d       	adc	r22, r1
 3de:	23 1f       	adc	r18, r19
 3e0:	84 9f       	mul	r24, r20
 3e2:	60 0d       	add	r22, r0
 3e4:	21 1d       	adc	r18, r1
 3e6:	82 2f       	mov	r24, r18
 3e8:	76 2f       	mov	r23, r22
 3ea:	6a 2f       	mov	r22, r26
 3ec:	11 24       	eor	r1, r1
 3ee:	9f 57       	subi	r25, 0x7F	; 127
 3f0:	50 40       	sbci	r21, 0x00	; 0
 3f2:	9a f0       	brmi	.+38     	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
 3f4:	f1 f0       	breq	.+60     	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
 3f6:	88 23       	and	r24, r24
 3f8:	4a f0       	brmi	.+18     	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
 3fa:	ee 0f       	add	r30, r30
 3fc:	ff 1f       	adc	r31, r31
 3fe:	bb 1f       	adc	r27, r27
 400:	66 1f       	adc	r22, r22
 402:	77 1f       	adc	r23, r23
 404:	88 1f       	adc	r24, r24
 406:	91 50       	subi	r25, 0x01	; 1
 408:	50 40       	sbci	r21, 0x00	; 0
 40a:	a9 f7       	brne	.-22     	; 0x3f6 <__mulsf3_pse+0x64>
 40c:	9e 3f       	cpi	r25, 0xFE	; 254
 40e:	51 05       	cpc	r21, r1
 410:	80 f0       	brcs	.+32     	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
 412:	0c 94 20 02 	jmp	0x440	; 0x440 <__fp_inf>
 416:	0c 94 a8 01 	jmp	0x350	; 0x350 <__fp_szero>
 41a:	5f 3f       	cpi	r21, 0xFF	; 255
 41c:	e4 f3       	brlt	.-8      	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
 41e:	98 3e       	cpi	r25, 0xE8	; 232
 420:	d4 f3       	brlt	.-12     	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
 422:	86 95       	lsr	r24
 424:	77 95       	ror	r23
 426:	67 95       	ror	r22
 428:	b7 95       	ror	r27
 42a:	f7 95       	ror	r31
 42c:	e7 95       	ror	r30
 42e:	9f 5f       	subi	r25, 0xFF	; 255
 430:	c1 f7       	brne	.-16     	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
 432:	fe 2b       	or	r31, r30
 434:	88 0f       	add	r24, r24
 436:	91 1d       	adc	r25, r1
 438:	96 95       	lsr	r25
 43a:	87 95       	ror	r24
 43c:	97 f9       	bld	r25, 7
 43e:	08 95       	ret

00000440 <__fp_inf>:
 440:	97 f9       	bld	r25, 7
 442:	9f 67       	ori	r25, 0x7F	; 127
 444:	80 e8       	ldi	r24, 0x80	; 128
 446:	70 e0       	ldi	r23, 0x00	; 0
 448:	60 e0       	ldi	r22, 0x00	; 0
 44a:	08 95       	ret

0000044c <__fp_nan>:
 44c:	9f ef       	ldi	r25, 0xFF	; 255
 44e:	80 ec       	ldi	r24, 0xC0	; 192
 450:	08 95       	ret

00000452 <__fp_pscA>:
 452:	00 24       	eor	r0, r0
 454:	0a 94       	dec	r0
 456:	16 16       	cp	r1, r22
 458:	17 06       	cpc	r1, r23
 45a:	18 06       	cpc	r1, r24
 45c:	09 06       	cpc	r0, r25
 45e:	08 95       	ret

00000460 <__fp_pscB>:
 460:	00 24       	eor	r0, r0
 462:	0a 94       	dec	r0
 464:	12 16       	cp	r1, r18
 466:	13 06       	cpc	r1, r19
 468:	14 06       	cpc	r1, r20
 46a:	05 06       	cpc	r0, r21
 46c:	08 95       	ret

0000046e <__fp_round>:
 46e:	09 2e       	mov	r0, r25
 470:	03 94       	inc	r0
 472:	00 0c       	add	r0, r0
 474:	11 f4       	brne	.+4      	; 0x47a <__fp_round+0xc>
 476:	88 23       	and	r24, r24
 478:	52 f0       	brmi	.+20     	; 0x48e <__fp_round+0x20>
 47a:	bb 0f       	add	r27, r27
 47c:	40 f4       	brcc	.+16     	; 0x48e <__fp_round+0x20>
 47e:	bf 2b       	or	r27, r31
 480:	11 f4       	brne	.+4      	; 0x486 <__fp_round+0x18>
 482:	60 ff       	sbrs	r22, 0
 484:	04 c0       	rjmp	.+8      	; 0x48e <__fp_round+0x20>
 486:	6f 5f       	subi	r22, 0xFF	; 255
 488:	7f 4f       	sbci	r23, 0xFF	; 255
 48a:	8f 4f       	sbci	r24, 0xFF	; 255
 48c:	9f 4f       	sbci	r25, 0xFF	; 255
 48e:	08 95       	ret

00000490 <__divmodhi4>:
 490:	97 fb       	bst	r25, 7
 492:	07 2e       	mov	r0, r23
 494:	16 f4       	brtc	.+4      	; 0x49a <__divmodhi4+0xa>
 496:	00 94       	com	r0
 498:	07 d0       	rcall	.+14     	; 0x4a8 <__divmodhi4_neg1>
 49a:	77 fd       	sbrc	r23, 7
 49c:	09 d0       	rcall	.+18     	; 0x4b0 <__divmodhi4_neg2>
 49e:	0e 94 8d 02 	call	0x51a	; 0x51a <__udivmodhi4>
 4a2:	07 fc       	sbrc	r0, 7
 4a4:	05 d0       	rcall	.+10     	; 0x4b0 <__divmodhi4_neg2>
 4a6:	3e f4       	brtc	.+14     	; 0x4b6 <__divmodhi4_exit>

000004a8 <__divmodhi4_neg1>:
 4a8:	90 95       	com	r25
 4aa:	81 95       	neg	r24
 4ac:	9f 4f       	sbci	r25, 0xFF	; 255
 4ae:	08 95       	ret

000004b0 <__divmodhi4_neg2>:
 4b0:	70 95       	com	r23
 4b2:	61 95       	neg	r22
 4b4:	7f 4f       	sbci	r23, 0xFF	; 255

000004b6 <__divmodhi4_exit>:
 4b6:	08 95       	ret

000004b8 <__udivmodsi4>:
 4b8:	a1 e2       	ldi	r26, 0x21	; 33
 4ba:	1a 2e       	mov	r1, r26
 4bc:	aa 1b       	sub	r26, r26
 4be:	bb 1b       	sub	r27, r27
 4c0:	fd 01       	movw	r30, r26
 4c2:	0d c0       	rjmp	.+26     	; 0x4de <__udivmodsi4_ep>

000004c4 <__udivmodsi4_loop>:
 4c4:	aa 1f       	adc	r26, r26
 4c6:	bb 1f       	adc	r27, r27
 4c8:	ee 1f       	adc	r30, r30
 4ca:	ff 1f       	adc	r31, r31
 4cc:	a2 17       	cp	r26, r18
 4ce:	b3 07       	cpc	r27, r19
 4d0:	e4 07       	cpc	r30, r20
 4d2:	f5 07       	cpc	r31, r21
 4d4:	20 f0       	brcs	.+8      	; 0x4de <__udivmodsi4_ep>
 4d6:	a2 1b       	sub	r26, r18
 4d8:	b3 0b       	sbc	r27, r19
 4da:	e4 0b       	sbc	r30, r20
 4dc:	f5 0b       	sbc	r31, r21

000004de <__udivmodsi4_ep>:
 4de:	66 1f       	adc	r22, r22
 4e0:	77 1f       	adc	r23, r23
 4e2:	88 1f       	adc	r24, r24
 4e4:	99 1f       	adc	r25, r25
 4e6:	1a 94       	dec	r1
 4e8:	69 f7       	brne	.-38     	; 0x4c4 <__udivmodsi4_loop>
 4ea:	60 95       	com	r22
 4ec:	70 95       	com	r23
 4ee:	80 95       	com	r24
 4f0:	90 95       	com	r25
 4f2:	9b 01       	movw	r18, r22
 4f4:	ac 01       	movw	r20, r24
 4f6:	bd 01       	movw	r22, r26
 4f8:	cf 01       	movw	r24, r30
 4fa:	08 95       	ret

000004fc <__umulhisi3>:
 4fc:	a2 9f       	mul	r26, r18
 4fe:	b0 01       	movw	r22, r0
 500:	b3 9f       	mul	r27, r19
 502:	c0 01       	movw	r24, r0
 504:	a3 9f       	mul	r26, r19
 506:	70 0d       	add	r23, r0
 508:	81 1d       	adc	r24, r1
 50a:	11 24       	eor	r1, r1
 50c:	91 1d       	adc	r25, r1
 50e:	b2 9f       	mul	r27, r18
 510:	70 0d       	add	r23, r0
 512:	81 1d       	adc	r24, r1
 514:	11 24       	eor	r1, r1
 516:	91 1d       	adc	r25, r1
 518:	08 95       	ret

0000051a <__udivmodhi4>:
 51a:	aa 1b       	sub	r26, r26
 51c:	bb 1b       	sub	r27, r27
 51e:	51 e1       	ldi	r21, 0x11	; 17
 520:	07 c0       	rjmp	.+14     	; 0x530 <__udivmodhi4_ep>

00000522 <__udivmodhi4_loop>:
 522:	aa 1f       	adc	r26, r26
 524:	bb 1f       	adc	r27, r27
 526:	a6 17       	cp	r26, r22
 528:	b7 07       	cpc	r27, r23
 52a:	10 f0       	brcs	.+4      	; 0x530 <__udivmodhi4_ep>
 52c:	a6 1b       	sub	r26, r22
 52e:	b7 0b       	sbc	r27, r23

00000530 <__udivmodhi4_ep>:
 530:	88 1f       	adc	r24, r24
 532:	99 1f       	adc	r25, r25
 534:	5a 95       	dec	r21
 536:	a9 f7       	brne	.-22     	; 0x522 <__udivmodhi4_loop>
 538:	80 95       	com	r24
 53a:	90 95       	com	r25
 53c:	bc 01       	movw	r22, r24
 53e:	cd 01       	movw	r24, r26
 540:	08 95       	ret

00000542 <_exit>:
 542:	f8 94       	cli

00000544 <__stop_program>:
 544:	ff cf       	rjmp	.-2      	; 0x544 <__stop_program>
